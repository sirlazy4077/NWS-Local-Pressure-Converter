import urllib.request as ul
from bs4 import BeautifulSoup as soup

#test_url_raw = 'https://www.wunderground.com/hourly/40.3071,-75.1477' #DEBUG
hard_coded_lat = 40.3071 #DEBUG
hard_coded_lon = -75.1477 #DEBUG

lat = hard_coded_lat #DEBUG
lon = hard_coded_lon #DEBUG

lat_round = round(lat, 3)
lon_round = round(lon, 3)


#the url which will generate a NWS page for the given lat and lon to pull from
url_head = 'https://www.wunderground.com/hourly/'

url_compiled = url_head + str(lat_round) + "," + str(lon_round)

print("url compiled from given lat and lon, click to verify pressure and altitude/elevation: ")
print(url_compiled)
# print("Pressure is found near the top of the page, under Current Conditions at, next to the bold text Barometer (reported in inHG)")
# print("Elevation is found towards the bottom right, below the map, next to the bold text Point Forecast (reported in feet)")
print()


#BeutifulSoup to extract the barometric pressure and the altitude
url = url_compiled
req = ul.Request(url, headers={'User-Agent': 'Mozilla/5.0'})
client = ul.urlopen(req)
htmldata = client.read()
client.close()

pagesoup = soup(htmldata, "html.parser")
pagetext = pagesoup.get_text()
# print(pagetext) #DEBUG

#TODO can't really figure out what tags they store this info under...

# print("Tag names: ") #DEBUG
tags = [tag.name for tag in pagesoup.find_all()]
# print(tags) #DEBUG

#Use to pull a txt file of the html to visually parse #DEBUG
#print("HTML data: ") #DEBUG
#print(pagesoup) #DEBUG
#Use to find all id tags on the page #DEBUG
ids = [tag['id'] for tag in pagesoup.select('div[id]')] #DEBUG
# print("ID Tags: ")
# print(ids) #DEBUG

#find all classes
class_list = set()
for tag in tags:
    for i in pagesoup.find_all(tag):
        if i.has_attr("class"):
            if len( i['class'] ) != 0:
                class_list.add(" ".join( i['class']))
# print(class_list)

#finding the class with elevation on the WeatherUnderground page
elev_find = pagesoup.find(class_="wx-data ng-star-inserted")
# print(elev_find) #DEBUG
elev_find_text = elev_find.text
# print(elev_find_text) #DEBUG
elev_find_split = elev_find_text.split(' ')
# print(elev_find_split) #DEBUG
elev = elev_find_split[1][:-2].strip()
print(elev) #DEBUG

#finding the class with pressure on the WeatherUnderground page
baro_find = pagesoup.find(class_="test-false wu-unit wu-unit-pressure ng-star-inserted")
# print(baro_find) #DEBUG
baro_find_text = baro_find.text
# print(baro_find_text) #DEBUG
baro_find_split = baro_find_text.split('Â°')
baro = baro_find_split[0].strip()
print(baro) #DEBUG

# div_id_elev = "MW_Position1" #Location of the Elevation
# div_id_baro = "MW_Position3" #Location of the pressure

# about_forecast = [i.text for i in pagesoup.find_all(id= div_id_baro)]
# current_conditions_detail = [i.text for i in pagesoup.find_all(id= div_id_elev)]


